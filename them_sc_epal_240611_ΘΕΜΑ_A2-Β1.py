##ΠΑΝΕΛΛΑΔΙΚΕΣ ΕΞΕΤΑΣΕΙΣ
##HMEΡΗΣΙΩΝ – ΕΣΠΕΡΙΝΩΝ ΕΠΑΓΓΕΛΜΑΤΙΚΩΝ ΛΥΚΕΙΩΝ
##ΤΡΙΤΗ 11 ΙΟΥΝΙΟΥ 2024
##ΕΞΕΤΑΖΟΜΕΝΟ ΜΑΘΗΜΑ:
##ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ ΥΠΟΛΟΓΙΣΤΩΝ
##
##ΘΕΜΑ A
##A2. Να γράψετε στο τετράδιό σας τους αριθμούς 1, 2, 3, 4, 5 από τη
##στήλη Α του παρακάτω πίνακα και δίπλα σε καθέναν από τους αριθμούς,
##ένα από τα γράμματα α, β, γ, δ, ε, στ της στήλης Β, που δίνει τη σωστή
##αντιστοίχιση. Σημειώνεται ότι ένα γράμμα από τη στήλη Β θα περισσέψει.
##ΣΤΗΛΗ Α	    ΣΤΗΛΗ Β
##1. int("5")**2    α. (5,0)
##2. str(5)*2       β. 25
##3. "5500"[:1]     γ. 1
##4. pow(5,0)       δ. "5"
##5. divmod(25,5)   ε. (0,5)
##		    στ. "55"
##Μονάδες 10
##
##print int("5")**2
##print str(5)*2
##print "5500"[:1]
##print pow(5,0)
##print divmod(25,5)
##
##25
##55
##5
##1
##(5, 0)
##
##1. int("5")**2    β. 25
##2. str(5)*2       στ. "55"
##3. "5500"[:1]     δ. "5"
##5. pow(5,0)       γ. 1
##5. divmod(25,5)   α. (5,0)
##
##ΘΕΜΑ B
##Β1. Να γράψετε συνάρτηση trim_a που να δέχεται μία συμβολοσειρά s1 και
##να επιστρέφει μία νέα συμβολοσειρά, όμοια με την s1, χωρίς τους
##χαρακτήρες ΄a΄ και ΄Α΄. Για παράδειγμα, αν κληθεί με s1 = "Alabama"
##πρέπει να επιστρέψει τη συμβολοσειρά "lbm".
##Μονάδες 9
##
def trim_a(s1):
    new_str = []
    for ch in s1:
        if ch not in ('A', 'a'):
            new_str.append(ch)
    return ''.join(new_str)

##def trim_a(s1):
##    return ''.join([ch for ch in s1 if ch not in ('A', 'a')])

##def trim_a(s1):
##    new_str = ""
##    for ch in s1:
##        if ch not in ('A', 'a'):
##            new_str += ch
##    return new_str

s1 = "Alabama"
s2 = trim_a(s1)
print(s1)
print(s2)
